*shorts

open questions 
	how to update both edit form and list at the same time 
	use global format

ef/sql
	scaffolding db context : dotnet ef dbcontext scaffold "Data Source=localhost\SQLEXPRESS;Initial Catalog=NORTHWND;Integrated Security=True" Microsoft.EntityFrameworkCore.SqlServer --context-dir Persistence --output-dir Models --context NorthWindDbContext
	services.AddMediatR(); ambigious and required going from both packages (mediatr and dependency injection) version 10 down to 6
	ssms would connect, had to use sql manager to start the sql server instance which was shut down
	sql server manager can be found here : "C:\Users\ferta\OneDrive\Desktop\SQLServerManager14.msc - Shortcut.lnk"
	error "The number of rows provided for a FETCH clause must be greater then zero" appears when skip and take accepts a zero

powershell : 
	starting script with admin grants : executing script with admin grants : if (!([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) { Start-Process powershell.exe "-NoProfile -ExecutionPolicy Bypass -File `"$PSCommandPath`"" -Verb RunAs; exit }
	to run from solution explorer, install vs pluging : Run With PowerShell

Angular
	when using a reference to a directive, delcaring it with # is what should done but passing it as param with # is not

****************************************************

*scenarios 

powershell :
	understanding why powershell script wont work :
		created a ps script with a basic ping command 
		executing script open ps window and closes it immediately 
		to debug what is going on, we use win + R and then put the following command
		PowerShell -NoExit "C:\Users\ferta\source\repos\fhoussam\Mt\StartAngular.ps1"
		Error message is clearer and we understood that we dont have some kind of access
		turned out we needed to execute the following command to allow ps to execute on ther machine 
		run ps with admin mode and run : set-executionpolicy remotesigned

complicated issues :

fluent validation 
	issue decription : validators are not called, and therefore model state is always true
	solution : the casual version we worked we've used : the IserviceCollection extension AddFluentValidation
	this method has deprecated and needs to be replaced with : 
		services.AddValidatorsFromAssemblyContaining<EditCustomerValidator>();
		services.AddFluentValidationAutoValidation();

angular
	goal : setting form value at component load
	issue description : trying to do that in a simple way : this.setFormExampleValues() in init (as well as in other events), error > Cannot read properties of undefined (reading 'form')
	solution : in init event : setTimeout(() => this.setFormExampleValues(), 10);

****************************************************

*snippets to remember

	- instead of trying to write the body prop, you should do this :
		async Task WriteToResponse(string s)
		{
			var bytes = Encoding.UTF8.GetBytes(s);
			await httpContext.Response.Body.WriteAsync(bytes, 0, bytes.Length);
		}

	- init user profiles after seed

		select * from AspNetRoleClaims
		select * from AspNetRoles
		select * from AspNetUserRoles
		select * from AspNetUsers

		--alice : 9a092ccf-99e9-4ca7-b251-0c1a85241659
		--bob : ebcc1893-8159-4fd0-8260-18acc82e9b83

		insert into AspNetRoles values (1, 'admin','admin','admin')
		insert into AspNetRoles values (2, 'manager','manager','manager')
		insert into AspNetRoles values (3, 'identified_visitor','identified_visitor','identified_visitor')

		insert into AspNetUserRoles values ('9a092ccf-99e9-4ca7-b251-0c1a85241659', 1)
		insert into AspNetUserRoles values ('ebcc1893-8159-4fd0-8260-18acc82e9b83', 2)


//check employee experience level
select EmployeeID,count(*) from Orders
group by EmployeeID
having count(*) > 80
order by 2 desc

select CustomerID,count(*) from Orders
group by CustomerID
having count(*) > 20
order by 2 desc

//order select
select OrderID, ContactName, Employees.FirstName, OrderDate, ShipCountry
from Orders
join Customers on Customers.CustomerID = Orders.CustomerID
join Employees on Employees.EmployeeID = Orders.EmployeeID